openapi: 3.0.1
info:
  title: Compassolisa
  description: API para abertura da locadora de carros "compassolisa", que atua no seguimento de aluguel de carros de luxo e semi luxo.
  version: 0.0.1
  license:
    name: 'Lincença: GPLv3'
    url: https://www.gnu.org/licenses/gpl-3.0.html
externalDocs:
  description: Repositório-(Github)
  url: https://github.com/Caroll8silva/Compassolisa
servers:
  - url: http://localhost:3000/api/v1/
    description: API Compassolisa
  - url: https://api-compassolisa.herokuapp.com/api/v1/
    description: Heroku server
paths:
  /authenticate:
    post:
      tags:
        - Autenticação do usuário
      summary: Autenticar um usuário
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                senha:
                  type: string
      responses:
        '201':
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  cpf:
                    type: string
                  data_nascimento:
                    type: string
                  habilitado:
                    type: string
        '400':
          description: Cadastro falhou
          content:
            application/json:
              example: Not authorized
  /car:
    get:
      security:
        - auth: []
      tags:
        - Carros
      summary: Listar todos os carros
      parameters:
        - name: modelo
          in: query
          schema:
            type: string
          required: false
        - name: cor
          in: query
          schema:
            type: string
          required: false
        - name: ano
          in: query
          schema:
            type: number
          required: false
        - name: quantidadePassageiros
          in: query
          schema:
            type: number
          required: false
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  modelo:
                    type: string
                  cor:
                    type: string
                  ano:
                    type: number
                  quantidadePassageiros:
                    type: number
    post:
      security:
        - auth: []
      tags:
        - Carros
      summary: Cadastrar carro
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                modelo:
                  type: string
                cor:
                  type: string
                ano:
                  type: number
                acessorios:
                  type: array
                  items:
                    type: object
                    properties:
                      descricao:
                        type: string
                quantidadePassageiros:
                  type: number
      responses:
        '201':
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  modelo:
                    type: string
                  cor:
                    type: string
                  ano:
                    type: string
                  acessorios:
                    type: array
                    items:
                      type: object
                      properties:
                        descricao:
                          type: string
                  quantidadePassageiros:
                    type: number
        '400':
          description: Cadastro falhou
          content:
            application/json:
              example: Car not registered
  /car/{id}:
    get:
      security:
        - auth: []
      tags:
        - Carros
      summary: lista um carro
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Carro listado
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  modelo:
                    type: string
                  cor:
                    type: string
                  ano:
                    type: string
                  acessorios:
                    type: array
                    items:
                      type: object
                      properties:
                        descricao:
                          type: string
                  quantidadePassageiros:
                    type: number
        '400':
          description: Erro ao listar esse carro
          content:
            application/json:
              example: bad request
    put:
      security:
        - auth: []
      tags:
        - Carros
      summary: Atualizar um carro
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                modelo:
                  type: string
                cor:
                  type: string
                ano:
                  type: string
                acessorios:
                  type: array
                  items:
                    type: object
                    properties:
                      descricao:
                        type: string
                quantidadePassageiros:
                  type: number
      responses:
        '200':
          description: Carro atualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  modelo:
                    type: string
                  cor:
                    type: string
                  ano:
                    type: string
                  acessorios:
                    type: array
                    items:
                      type: object
                      properties:
                        descricao:
                          type: string
                  quantidadePassageiros:
                    type: number
        '400':
          description: Erro ao atualizar carro
          content:
            application/json:
              example: bad request
    delete:
      security:
        - auth: []
      tags:
        - Carros
      summary: Excluir Carro
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: Carro excluído
          content:
            application/json:
              example: Deleted Car
        '404':
          description: Erro ao deletar Carro
          content:
            application/json:
              example: Car not found
  /car/{id}/acessorios/{id2}:
    parameters:
      - name: id
        in: path
        schema:
          type: string
        required: true
      - name: id2
        in: path
        schema:
          type: string
        required: true
    patch:
      security:
        - auth: []
      tags:
        - Carros
      summary: Atualizar uma descrição do carro
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                descricao:
                  type: string
      responses:
        '201':
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  modelo:
                    type: string
                  cor:
                    type: string
                  ano:
                    type: string
                  acessorios:
                    type: array
                    items:
                      type: object
                      properties:
                        descricao:
                          type: string
                  quantidadePassageiros:
                    type: number
        '400':
          description: atualização falhou
          content:
            application/json:
              example: description not updated
        '404':
          description: Erro ao atualizar descrição
          content:
            application/json:
              example: ID not found
  /people:
    get:
      tags:
        - Pessoas
      summary: Listar todas as pessoas
      parameters:
        - name: nome
          in: query
          schema:
            type: string
          required: false
        - name: cpf
          in: query
          schema:
            type: string
          required: false
        - name: data_nascimento
          in: query
          schema:
            type: string
          required: false
        - name: email
          in: query
          schema:
            type: string
          required: false
        - name: habilitado
          in: query
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  nome:
                    type: string
                  cpf:
                    type: string
                  data_nascimento:
                    type: string
                  email:
                    type: string
                  habilitado:
                    type: string
                    enum:
                      - sim
                      - não
    post:
      tags:
        - Pessoas
      summary: Cadastrar pessoa
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                cpf:
                  type: string
                data_nascimento:
                  type: string
                email:
                  type: string
                senha:
                  type: string
                habilitado:
                  type: string
      responses:
        '201':
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  nome:
                    type: string
                  cpf:
                    type: string
                  data_nascimento:
                    type: string
                  email:
                    type: string
                  senha:
                    type: string
                  habilitado:
                    type: string
        '400':
          description: Cadastro falhou
          content:
            application/json:
              example: Person not registered
  /people/{id}:
    get:
      tags:
        - Pessoas
      summary: listar uma pessoa
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Pessoa Listada
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  nome:
                    type: string
                  cpf:
                    type: string
                  data_nascimento:
                    type: string
                  email:
                    type: string
                  habilitado:
                    type: string
        '400':
          description: Erro ao listar essa pessoa
          content:
            application/json:
              example: bad request
    put:
      tags:
        - Pessoas
      summary: Atualizar uma pessoa
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                cpf:
                  type: string
                data_nascimento:
                  type: string
                email:
                  type: string
                senha:
                  type: string
                habilitado:
                  type: string
                  enum:
                    - sim
                    - não
      responses:
        '200':
          description: Pessoa Atualizada
          content:
            application/json:
              schema:
                type: object
                properties:
                  nome:
                    type: string
                  cpf:
                    type: string
                  data_nascimento:
                    type: string
                  email:
                    type: string
                  senha:
                    type: string
                  habilitado:
                    type: string
        '400':
          description: Erro ao atualizar pessoa
          content:
            application/json:
              example: bad request
    delete:
      tags:
        - Pessoas
      summary: Excluir pessoa
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: Pessoa excluida
          content:
            application/json:
              example: Deleted Person
        '404':
          description: Erro ao deletar Pessoa
          content:
            application/json:
              example: Person not found
  /rental:
    get:
      tags:
        - Locadoras
      summary: Listar todas as locadoras
      parameters:
        - name: nome
          in: query
          schema:
            type: string
        - name: cnpj
          in: query
          schema:
            type: string
        - name: atividades
          in: query
          schema:
            type: string
        - name: cep
          in: query
          schema:
            type: string
        - name: number
          in: query
          schema:
            type: string
        - name: isFilial
          in: query
          schema:
            type: string
      responses:
        '200':
          description: sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: number
                  nome:
                    type: string
                  cnpj:
                    type: string
                  atividades:
                    type: string
                  endereco:
                    type: array
                    items:
                      type: object
                      properties:
                        cep:
                          type: string
                        logradouro:
                          type: string
                        complemento:
                          type: string
                        bairro:
                          type: string
                        number:
                          type: string
                        localidade:
                          type: string
                        uf:
                          type: string
                        isFilial:
                          type: string
        '400':
          description: Erro ao listar locadoras
          content:
            application/json:
              example: bad request
    post:
      tags:
        - Locadoras
      summary: Cadastrar Locadora
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                cnpj:
                  type: string
                atividades:
                  type: string
                endereco:
                  type: array
                  items:
                    type: object
                    properties:
                      cep:
                        type: string
                      number:
                        type: string
                      isFilial:
                        type: boolean
      responses:
        '201':
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: number
                  nome:
                    type: string
                  cnpj:
                    type: string
                  atividades:
                    type: string
                  endereco:
                    type: array
                    items:
                      type: object
                      properties:
                        cep:
                          type: string
                        logradouro:
                          type: string
                        complemento:
                          type: string
                        bairro:
                          type: string
                        number:
                          type: string
                        localidade:
                          type: string
                        uf:
                          type: string
                        isFilial:
                          type: string
        '400':
          description: Cadastro falhou
          content:
            application/json:
              example: Rental not registered
  /rental/{id}:
    parameters:
      - name: id
        in: path
        schema:
          type: string
        required: true
    get:
      tags:
        - Locadoras
      summary: listar uma locadora
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: number
                  nome:
                    type: string
                  cnpj:
                    type: string
                  atividades:
                    type: string
                  endereco:
                    type: array
                    items:
                      type: object
                      properties:
                        cep:
                          type: string
                        logradouro:
                          type: string
                        complemento:
                          type: string
                        bairro:
                          type: string
                        number:
                          type: number
                        localidade:
                          type: string
                        uf:
                          type: string
                        isFilial:
                          type: string
        '400':
          description: Erro ao listar essa locadora
          content:
            application/json:
              example: bad request
    put:
      tags:
        - Locadoras
      summary: Atualizar uma locadora
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                cnpj:
                  type: string
                atividades:
                  type: string
                endereco:
                  type: array
                  items:
                    type: object
                    properties:
                      cep:
                        type: string
                      number:
                        type: string
                      isFilial:
                        type: boolean
      responses:
        '201':
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: number
                  nome:
                    type: string
                  cnpj:
                    type: string
                  atividades:
                    type: string
                  endereco:
                    type: array
                    items:
                      type: object
                      properties:
                        cep:
                          type: string
                        logradouro:
                          type: string
                        complemento:
                          type: string
                        bairro:
                          type: string
                        number:
                          type: string
                        localidade:
                          type: string
                        uf:
                          type: string
                        isFilial:
                          type: string
        '400':
          description: Erro ao atualizar locadora
          content:
            application/json:
              example: bad request
        '404':
          description: Erro ao atualizar locadora
          content:
            application/json:
              example: Rental not found
    delete:
      tags:
        - Locadoras
      summary: Excluir locadora
      responses:
        '204':
          description: Locadora excluida
          content:
            application/json:
              example: Deleted Rentaç
        '404':
          description: Erro ao deletar locadora
          content:
            application/json:
              example: Rental not found
components:
  securitySchemes:
    auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
